class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int m=image.size();
        int n=image[0].size();
        vector<vector<int>> ans=image;
        int iniColor=image[sr][sc];
         int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        dfs(sr,sc,image,ans,iniColor,delrow,delcol,color);
        return ans;
       
    }

    private:
    void dfs(int row,int col,vector<vector<int>>& image,vector<vector<int>>& ans, int iniColor,int delrow[],int delcol[],int color)
    {
        int m=image.size();
        int n=image[0].size();
ans[row][col]=color;
    for(int i=0;i<4;i++)
    {
        int nrow=row+delrow[i];
        int ncol=col+delcol[i];

        if(nrow>=0 && nrow<m && ncol>=0 && ncol<n && ans[nrow][ncol]!=color && image[nrow][ncol]==iniColor)
        {
            dfs(nrow,ncol,image,ans,iniColor,delrow,delcol,color);
        }
    }
    }
    

};