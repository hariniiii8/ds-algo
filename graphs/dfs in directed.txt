undirectedalgo doesnt work here, check out the gif in striver notes
4 marks 5 as vis, and when 7 comes to 5 it finds 5 as visited and therefore concludes that cycle is present , but actually its not

for this algo make 2 arrays vis and dfs vis

public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int> vis(V,0);
        vector<int> dfsvis(V,0);
        for(int i=0;i<V;i++)
        {
            if(vis[i]!=1)
            {
                if(dfsCheck(i,vis,dfsvis,adj)==true)
                {return true;}
                
            }
        }
        return false;
    }
    private:
    bool dfsCheck(int node,vector<int> &vis,vector<int>& dfsvis,vector<int> adj[])
    {
        vis[node]=1;
        dfsvis[node]=1;
        for(auto it:adj[node])
        {
            if(vis[it]!=1)
            {
                 if(dfsCheck(it,vis,dfsvis,adj))
          {
              return true;
          }
                
            }
         
          
          else if(dfsvis[it]==1)
          {
              return true;
          }
        }
        dfsvis[node]=0;
        return false;
    }


using 1 array:
 public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int> vis(V,0);
       
        for(int i=0;i<V;i++)
        {
            if(vis[i]!=1)
            {
                if(dfsCheck(i,vis,adj)==true)
                {return true;}
                
            }
        }
        return false;
    }
    private:
    bool dfsCheck(int node,vector<int> &vis,vector<int> adj[])
    {
        vis[node]=2;
        
        for(auto it:adj[node])
        {
            if(vis[it]==0)
            {
                 if(dfsCheck(it,vis,adj))
          {
              return true;
          }
                
            }
         
          
          else if(vis[it]==2)
          {
              return true;
          }
        }
        vis[node]=1;
        return false;
    }
