class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    stack<int> st;
	    vector<int> vis(V,0);
	    vector<int> ans;   //dont initialize this
	    for(int i=0;i<V;i++)
	    {
	        if(vis[i]!=1)
	        {
	            dfs(i,adj,vis,st,V);
	        }
	        
	    }
	    while(!st.empty())
	    {
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	    
	    
	    
	}
	private:
	void dfs(int node,vector<int> adj[],vector<int> &vis,stack<int> &st,int V)
	{
	    
	    vis[node]=1;
	    for(auto it:adj[node])
	    {
	        if(vis[it]!=1)
	        {
	            
	            vis[it]=1;
	            dfs(it,adj,vis,st,V);
	        }
	    }
	    st.push(node);
	}
};

