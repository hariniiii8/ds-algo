class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        int vis[m][n];
        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        queue<pair<pair<int , int>,int>> q;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({{i,j},0});
                }
            }
        }
        int tm=0;
        while(!q.empty())
        {
            int row=q.front().first.first;
            int col=q.front().first.second;
            int t=q.front().second;
            q.pop();
            tm=max(tm,t);
            for(int i=0;i<4;i++)
            {
                
                   int nrow=row+delrow[i];
                    int ncol=col+delcol[i];
                    if(nrow<m && nrow>=0 && ncol<n && ncol>=0 && grid[nrow][ncol]==1 && vis[nrow][ncol]!=2)
                    {
                    vis[nrow][ncol]=2;
                    q.push({{nrow,ncol},t+1});
                    }
                
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(vis[i][j]!=2 && grid[i][j]==1)
                {
                    return -1;
                }
            }
        }
        return tm;
    }
};