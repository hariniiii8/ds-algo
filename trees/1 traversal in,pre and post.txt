vector<vector<int>> getTreeTraversal(TreeNode *root){
    // Write your code here.
    vector<vector<int>> ans;
    vector<int> pre,in,post;
    stack<pair<TreeNode*,int>> s;
    s.push({root,1});
    while(!s.empty())
    {
        auto it=s.top();
        s.pop();
        TreeNode *node=it.first;
        int level=it.second;
        if(level==1)
        {
            pre.push_back(node->data);
            s.push({node,level+1});
            if(node->left!=NULL)
            {
                s.push({node->left,1});
            }
        }
        else if(level==2)
        {
            in.push_back(node->data);
            s.push({node,level+1});
            if(node->right!=NULL)
            {
                s.push({node->right,1});
            }

        }
        else{
            post.push_back(node->data);
        }
    }
    ans.push_back(in);
     ans.push_back(pre);
      ans.push_back(post);
      return ans;

}