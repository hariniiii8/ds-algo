class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
       if (!root)
            return 0;
        
        int ans = 0;
        queue<pair<TreeNode*, long long>> q; 
        
        q.push({root, 0});
        
        while (!q.empty()) {
            int size = q.size();
            long long curMin = q.front().second;
            long long leftMost = 0, rightMost = 0; 
            
            for (int i = 0; i < size; i++) {
                long long cur_id = q.front().second - curMin;
                TreeNode* temp = q.front().first;
                q.pop();
                
                if (i == 0)
                    leftMost = cur_id;
                if (i == size - 1)
                    rightMost = cur_id;
                
                if (temp->left)
                    q.push({temp->left, cur_id * 2});
                if (temp->right)
                    q.push({temp->right, cur_id * 2 + 1});
            }
            
            ans = max(ans, static_cast<int>(rightMost - leftMost) + 1);
        }
        
        return ans;
    }
};


//striver code doesnt work on all