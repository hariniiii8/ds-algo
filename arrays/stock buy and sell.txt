class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxPro=0;
        int minPrice=INT_MAX;
        int n=prices.size();
      for(int i=0;i<n;i++)
      {
        minPrice=min(minPrice,prices[i]);
        maxPro=max(maxPro,prices[i]-minPrice);
      } 
      return maxPro; 
    }
};

dont do reverse way , as first stock should be bought and then sold


brute:
time limit exceeded
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxPro = 0;
    int n = prices.size();

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (prices[j] > prices[i]) {
            maxPro = max(prices[j] - prices[i], maxPro);
            }
        }
        }

    return maxPro;
    }
};