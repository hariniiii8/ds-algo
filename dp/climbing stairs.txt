how to  identify its a dp problem:
count the no of ways: recursion question
other recursion patterns:max/min (optimization),count no of ways or find best way.


class Solution {
public:
    int climbStairs(int n) {
        vector<int> dp(n+1,-1);
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<n+1;i++)
        {
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
        
    }
};


class Solution {
public:
    int climbStairs(int n) {
        
        int prev2=1;
        int prev1=1;
        for(int i=2;i<n+1;i++)
        {
            int cur=prev1+prev2;
            prev2=prev1;
            prev1=cur;
        }
        return prev1;
        
    }
};