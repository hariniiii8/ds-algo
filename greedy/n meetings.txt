struct meeting{
    int start;
    int end;
    int index;
};

class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    
    bool static comparator(struct meeting m1,meeting m2)
    {
        if(m1.end<m2.end)
        {
            return true;
        }
         else if(m1.end>m2.end)
        {
            return false;
        }
         else if(m1.index<m2.index)
        {
            return true;
        }
        return false;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        struct meeting meet[n];
        for(int i=0;i<n;i++)
        {
            meet[i].start=start[i];
            meet[i].end=end[i];
            meet[i].index=i+1;
        }
        
        sort(meet,meet+n,comparator);
        
        int count=1;
        int limit=meet[0].end;
        for(int i=1;i<n;i++)
        {
            if(meet[i].start>limit)
            {
                count++;
                limit=meet[i].end;
            }
        }
        return count;
        
    }
};

using vector to store the indexes:
answer.push_back(meet[0].pos);

      for (int i = 1; i < n; i++) {
         if (meet[i].start > limit) {
            limit = meet[i].end;
            answer.push_back(meet[i].pos);
         }
      }