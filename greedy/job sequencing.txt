class Solution 
{
    public:
    bool static comparator(Job j1,Job j2)
    {
        if(j1.profit>j2.profit)
        {
            return true;
        }
        return false;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
       
      
        sort(arr,arr+n,comparator);
        int maxi=arr[0].dead;
        for(int i=1;i<n;i++)
        {
            maxi=max(maxi,arr[i].dead);
        }
        vector<int> slot(maxi+1,-1);
        int profit=0;
        int count=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=arr[i].dead;j>0;j--)
            {
                if(slot[j]==-1)
                {
                    slot[j]=i;
                    count++;
                    profit+=arr[i].profit;
                    break;
                }
            }
        }
        vector<int> ans;
        ans.push_back(count);
        ans.push_back(profit);
        return ans;
        
    } 


y slot is of size maxi +1 and y in j loop we stop at j>0 and not equal to
because job numbers start from 1 and we leave the 0th index of the array empty