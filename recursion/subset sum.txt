class Solution
{
public:
    // Helper function to generate all subset sums
    void generateSubsetSums(vector<int>& arr, int index, int currentSum, vector<int>& sums)
    {
        if (index == arr.size())
        {
            sums.push_back(currentSum); // Add the current sum to the result
            return;
        }
        
        // Include the current element in the subset
        generateSubsetSums(arr, index + 1, currentSum + arr[index], sums);
        
        // Exclude the current element from the subset
        generateSubsetSums(arr, index + 1, currentSum, sums);
    }
    
    vector<int> subsetSums(vector<int> arr, int N)
    {
        vector<int> sums;
        generateSubsetSums(arr, 0, 0, sums); // Start with index 0 and current sum 0
        return sums;
    }
};
